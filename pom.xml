<!--<project xmlns="http://maven.apache.org/POM/4.0.0"-->
<!--         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 -->
<!--                             http://maven.apache.org/xsd/maven-4.0.0.xsd">-->
<!--  <modelVersion>4.0.0</modelVersion>-->
<!--  <groupId>com.inventory</groupId>-->
<!--  <artifactId>InventoryManagement</artifactId>-->
<!--  <version>1.0-SNAPSHOT</version>-->
<!--  <properties>-->
<!--    <maven.compiler.source>17</maven.compiler.source>-->
<!--    <maven.compiler.target>17</maven.compiler.target>-->
<!--  </properties>-->
<!--  <dependencies>-->
<!--    <dependency>-->
<!--      <groupId>com.mysql</groupId>-->
<!--      <artifactId>mysql-connector-j</artifactId>-->
<!--      <version>9.4.0</version> </dependency>-->
<!--  </dependencies>-->
<!--</project>-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- 1. SPRING BOOT PARENT: Manages dependency versions -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.5</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.inventory</groupId>
  <artifactId>InventoryManagement</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <dependencies>
    <!-- Keep your existing JDBC/MySQL dependency -->
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <!-- REMOVED <version>9.4.0</version> - Let Spring Boot manage the version for better compatibility -->
    </dependency>

    <!-- 2. SPRING BOOT WEB: For building RESTful APIs and running an embedded Tomcat server -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- 3. SPRING BOOT JDBC: Simplifies connecting and pooling JDBC connections -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <!-- 4. LOMBOK: Highly recommended to automatically generate getters/setters
         and constructors for DTOs (like ProductDto) -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <!-- ADDED: Repositories configuration to help Maven find the parent POM -->
  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <!-- 5. BUILD PLUGIN: Necessary to package the application into a runnable JAR -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
